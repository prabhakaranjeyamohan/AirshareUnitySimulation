// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: IUX_OTS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IUX {

  /// <summary>Holder for reflection information generated from IUX_OTS.proto</summary>
  public static partial class IUXOTSReflection {

    #region Descriptor
    /// <summary>File descriptor for IUX_OTS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IUXOTSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1JVVhfT1RTLnByb3RvEgNJVVgaFElVWF9zdWJzdHJ1Y3RzLnByb3RvIpsB",
            "ChBPVFNSZXF1ZXN0Q29uZmlnEhUKDWFzc3VyZV9jb25maWcYASABKAgSFwoP",
            "YXBvbGx5b25fY29uZmlnGAIgASgIEhIKCmRhc19jb25maWcYAyABKAgSFwoP",
            "ZWNob2R5bmVfY29uZmlnGAQgASgIEhYKDnBoYW50b21fY29uZmlnGAUgASgI",
            "EhIKCmJzc19jb25maWcYBiABKAgioAMKCU9UU0NvbmZpZxIwCg1hc3N1cmVf",
            "Y29uZmlnGAEgASgLMhQuSVVYLk9UU0Fzc3VyZUNvbmZpZ0gAiAEBEjQKD2Fw",
            "b2xseW9uX2NvbmZpZxgCIAEoCzIWLklVWC5PVFNBcG9sbHlvbkNvbmZpZ0gB",
            "iAEBEioKCmRhc19jb25maWcYAyABKAsyES5JVVguT1RTREFTQ29uZmlnSAKI",
            "AQESNAoPZWNob2R5bmVfY29uZmlnGAQgASgLMhYuSVVYLk9UU0VjaG9keW5l",
            "Q29uZmlnSAOIAQESMgoOcGhhbnRvbV9jb25maWcYBSABKAsyFS5JVVguT1RT",
            "UGhhbnRvbUNvbmZpZ0gEiAEBEioKCmJzc19jb25maWcYBiABKAsyES5JVVgu",
            "T1RTQlNTQ29uZmlnSAWIAQFCEAoOX2Fzc3VyZV9jb25maWdCEgoQX2Fwb2xs",
            "eW9uX2NvbmZpZ0INCgtfZGFzX2NvbmZpZ0ISChBfZWNob2R5bmVfY29uZmln",
            "QhEKD19waGFudG9tX2NvbmZpZ0INCgtfYnNzX2NvbmZpZyLIAgoKT1RTQ29u",
            "dHJvbBIoCgZhc3N1cmUYASABKA4yEy5JVVguT1RTQ29udHJvbENvZGVIAIgB",
            "ARIqCghhcG9sbHlvbhgCIAEoDjITLklVWC5PVFNDb250cm9sQ29kZUgBiAEB",
            "EiUKA2RhcxgDIAEoDjITLklVWC5PVFNDb250cm9sQ29kZUgCiAEBEioKCGVj",
            "aG9keW5lGAQgASgOMhMuSVVYLk9UU0NvbnRyb2xDb2RlSAOIAQESKQoHcGhh",
            "bnRvbRgFIAEoDjITLklVWC5PVFNDb250cm9sQ29kZUgEiAEBEiUKA2JzcxgG",
            "IAEoDjITLklVWC5PVFNDb250cm9sQ29kZUgFiAEBQgkKB19hc3N1cmVCCwoJ",
            "X2Fwb2xseW9uQgYKBF9kYXNCCwoJX2VjaG9keW5lQgoKCF9waGFudG9tQgYK",
            "BF9ic3MiTwoPT1RTQXNzdXJlQ29uZmlnEgoKAmlwGAEgASgHEgwKBHBvcnQY",
            "AiABKA0SFQoIbXNnX3NlbnQYAyABKA1IAIgBAUILCglfbXNnX3NlbnQiNgoR",
            "T1RTQXBvbGx5b25Db25maWcSDwoHc3RhcnRlZBgBIAEoCBIQCghmaWxlbmFt",
            "ZRgCIAEoCSJKCgxPVFNEQVNDb25maWcSDwoHcGF0dGVybhgBIAEoDRIpChJy",
            "ZWZlcmVuY2VfbG9jYXRpb24YAiABKAsyDS5JVVguTG9jYXRpb24isAEKEU9U",
            "U0VjaG9keW5lQ29uZmlnEicKEGFudGVubmFfbG9jYXRpb24YASABKAsyDS5J",
            "VVguTG9jYXRpb24SJwoQYW50ZW5uYV9hdHRpdHVkZRgCIAEoCzINLklVWC5B",
            "dHRpdHVkZRIKCgJpcBgDIAEoBxIUCgxjb21tYW5kX3BvcnQYBCABKA0SEwoL",
            "c3RhdHVzX3BvcnQYBSABKA0SEgoKdHJhY2tfcG9ydBgGIAEoDSIgChBPVFNQ",
            "aGFudG9tQ29uZmlnEgwKBHBvcnQYASABKA0iKAoMT1RTQlNTQ29uZmlnEgoK",
            "AmlwGAEgASgHEgwKBHBvcnQYAiABKA0qfgoOT1RTQ29udHJvbENvZGUSDgoK",
            "Tk9fQ09OVFJPTBAAEgkKBVNUQVJUEAESCAoEU1RPUBACEggKBFNBVkUQAxII",
            "CgRMT0FEEAQSEgoOUkVRVUVTVF9DT05GSUcQBRIOCgpFTkFCTEVfTE9HEAYS",
            "DwoLRElTQUJMRV9MT0cQB0IjChBjb20uYWlyc2hhcmUuSVVYQgdJVVhfT1RT",
            "SAGiAgNJVVhQAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IUX.IUXSubstructsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::IUX.OTSControlCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSRequestConfig), global::IUX.OTSRequestConfig.Parser, new[]{ "AssureConfig", "ApollyonConfig", "DasConfig", "EchodyneConfig", "PhantomConfig", "BssConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSConfig), global::IUX.OTSConfig.Parser, new[]{ "AssureConfig", "ApollyonConfig", "DasConfig", "EchodyneConfig", "PhantomConfig", "BssConfig" }, new[]{ "AssureConfig", "ApollyonConfig", "DasConfig", "EchodyneConfig", "PhantomConfig", "BssConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSControl), global::IUX.OTSControl.Parser, new[]{ "Assure", "Apollyon", "Das", "Echodyne", "Phantom", "Bss" }, new[]{ "Assure", "Apollyon", "Das", "Echodyne", "Phantom", "Bss" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSAssureConfig), global::IUX.OTSAssureConfig.Parser, new[]{ "Ip", "Port", "MsgSent" }, new[]{ "MsgSent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSApollyonConfig), global::IUX.OTSApollyonConfig.Parser, new[]{ "Started", "Filename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSDASConfig), global::IUX.OTSDASConfig.Parser, new[]{ "Pattern", "ReferenceLocation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSEchodyneConfig), global::IUX.OTSEchodyneConfig.Parser, new[]{ "AntennaLocation", "AntennaAttitude", "Ip", "CommandPort", "StatusPort", "TrackPort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSPhantomConfig), global::IUX.OTSPhantomConfig.Parser, new[]{ "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IUX.OTSBSSConfig), global::IUX.OTSBSSConfig.Parser, new[]{ "Ip", "Port" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OTSControlCode {
    [pbr::OriginalName("NO_CONTROL")] NoControl = 0,
    [pbr::OriginalName("START")] Start = 1,
    [pbr::OriginalName("STOP")] Stop = 2,
    [pbr::OriginalName("SAVE")] Save = 3,
    [pbr::OriginalName("LOAD")] Load = 4,
    [pbr::OriginalName("REQUEST_CONFIG")] RequestConfig = 5,
    [pbr::OriginalName("ENABLE_LOG")] EnableLog = 6,
    [pbr::OriginalName("DISABLE_LOG")] DisableLog = 7,
  }

  #endregion

  #region Messages
  public sealed partial class OTSRequestConfig : pb::IMessage<OTSRequestConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSRequestConfig> _parser = new pb::MessageParser<OTSRequestConfig>(() => new OTSRequestConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSRequestConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSRequestConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSRequestConfig(OTSRequestConfig other) : this() {
      assureConfig_ = other.assureConfig_;
      apollyonConfig_ = other.apollyonConfig_;
      dasConfig_ = other.dasConfig_;
      echodyneConfig_ = other.echodyneConfig_;
      phantomConfig_ = other.phantomConfig_;
      bssConfig_ = other.bssConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSRequestConfig Clone() {
      return new OTSRequestConfig(this);
    }

    /// <summary>Field number for the "assure_config" field.</summary>
    public const int AssureConfigFieldNumber = 1;
    private bool assureConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssureConfig {
      get { return assureConfig_; }
      set {
        assureConfig_ = value;
      }
    }

    /// <summary>Field number for the "apollyon_config" field.</summary>
    public const int ApollyonConfigFieldNumber = 2;
    private bool apollyonConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ApollyonConfig {
      get { return apollyonConfig_; }
      set {
        apollyonConfig_ = value;
      }
    }

    /// <summary>Field number for the "das_config" field.</summary>
    public const int DasConfigFieldNumber = 3;
    private bool dasConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DasConfig {
      get { return dasConfig_; }
      set {
        dasConfig_ = value;
      }
    }

    /// <summary>Field number for the "echodyne_config" field.</summary>
    public const int EchodyneConfigFieldNumber = 4;
    private bool echodyneConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EchodyneConfig {
      get { return echodyneConfig_; }
      set {
        echodyneConfig_ = value;
      }
    }

    /// <summary>Field number for the "phantom_config" field.</summary>
    public const int PhantomConfigFieldNumber = 5;
    private bool phantomConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PhantomConfig {
      get { return phantomConfig_; }
      set {
        phantomConfig_ = value;
      }
    }

    /// <summary>Field number for the "bss_config" field.</summary>
    public const int BssConfigFieldNumber = 6;
    private bool bssConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BssConfig {
      get { return bssConfig_; }
      set {
        bssConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSRequestConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSRequestConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssureConfig != other.AssureConfig) return false;
      if (ApollyonConfig != other.ApollyonConfig) return false;
      if (DasConfig != other.DasConfig) return false;
      if (EchodyneConfig != other.EchodyneConfig) return false;
      if (PhantomConfig != other.PhantomConfig) return false;
      if (BssConfig != other.BssConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssureConfig != false) hash ^= AssureConfig.GetHashCode();
      if (ApollyonConfig != false) hash ^= ApollyonConfig.GetHashCode();
      if (DasConfig != false) hash ^= DasConfig.GetHashCode();
      if (EchodyneConfig != false) hash ^= EchodyneConfig.GetHashCode();
      if (PhantomConfig != false) hash ^= PhantomConfig.GetHashCode();
      if (BssConfig != false) hash ^= BssConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AssureConfig != false) {
        output.WriteRawTag(8);
        output.WriteBool(AssureConfig);
      }
      if (ApollyonConfig != false) {
        output.WriteRawTag(16);
        output.WriteBool(ApollyonConfig);
      }
      if (DasConfig != false) {
        output.WriteRawTag(24);
        output.WriteBool(DasConfig);
      }
      if (EchodyneConfig != false) {
        output.WriteRawTag(32);
        output.WriteBool(EchodyneConfig);
      }
      if (PhantomConfig != false) {
        output.WriteRawTag(40);
        output.WriteBool(PhantomConfig);
      }
      if (BssConfig != false) {
        output.WriteRawTag(48);
        output.WriteBool(BssConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AssureConfig != false) {
        output.WriteRawTag(8);
        output.WriteBool(AssureConfig);
      }
      if (ApollyonConfig != false) {
        output.WriteRawTag(16);
        output.WriteBool(ApollyonConfig);
      }
      if (DasConfig != false) {
        output.WriteRawTag(24);
        output.WriteBool(DasConfig);
      }
      if (EchodyneConfig != false) {
        output.WriteRawTag(32);
        output.WriteBool(EchodyneConfig);
      }
      if (PhantomConfig != false) {
        output.WriteRawTag(40);
        output.WriteBool(PhantomConfig);
      }
      if (BssConfig != false) {
        output.WriteRawTag(48);
        output.WriteBool(BssConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssureConfig != false) {
        size += 1 + 1;
      }
      if (ApollyonConfig != false) {
        size += 1 + 1;
      }
      if (DasConfig != false) {
        size += 1 + 1;
      }
      if (EchodyneConfig != false) {
        size += 1 + 1;
      }
      if (PhantomConfig != false) {
        size += 1 + 1;
      }
      if (BssConfig != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSRequestConfig other) {
      if (other == null) {
        return;
      }
      if (other.AssureConfig != false) {
        AssureConfig = other.AssureConfig;
      }
      if (other.ApollyonConfig != false) {
        ApollyonConfig = other.ApollyonConfig;
      }
      if (other.DasConfig != false) {
        DasConfig = other.DasConfig;
      }
      if (other.EchodyneConfig != false) {
        EchodyneConfig = other.EchodyneConfig;
      }
      if (other.PhantomConfig != false) {
        PhantomConfig = other.PhantomConfig;
      }
      if (other.BssConfig != false) {
        BssConfig = other.BssConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AssureConfig = input.ReadBool();
            break;
          }
          case 16: {
            ApollyonConfig = input.ReadBool();
            break;
          }
          case 24: {
            DasConfig = input.ReadBool();
            break;
          }
          case 32: {
            EchodyneConfig = input.ReadBool();
            break;
          }
          case 40: {
            PhantomConfig = input.ReadBool();
            break;
          }
          case 48: {
            BssConfig = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AssureConfig = input.ReadBool();
            break;
          }
          case 16: {
            ApollyonConfig = input.ReadBool();
            break;
          }
          case 24: {
            DasConfig = input.ReadBool();
            break;
          }
          case 32: {
            EchodyneConfig = input.ReadBool();
            break;
          }
          case 40: {
            PhantomConfig = input.ReadBool();
            break;
          }
          case 48: {
            BssConfig = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSConfig : pb::IMessage<OTSConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSConfig> _parser = new pb::MessageParser<OTSConfig>(() => new OTSConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSConfig(OTSConfig other) : this() {
      assureConfig_ = other.assureConfig_ != null ? other.assureConfig_.Clone() : null;
      apollyonConfig_ = other.apollyonConfig_ != null ? other.apollyonConfig_.Clone() : null;
      dasConfig_ = other.dasConfig_ != null ? other.dasConfig_.Clone() : null;
      echodyneConfig_ = other.echodyneConfig_ != null ? other.echodyneConfig_.Clone() : null;
      phantomConfig_ = other.phantomConfig_ != null ? other.phantomConfig_.Clone() : null;
      bssConfig_ = other.bssConfig_ != null ? other.bssConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSConfig Clone() {
      return new OTSConfig(this);
    }

    /// <summary>Field number for the "assure_config" field.</summary>
    public const int AssureConfigFieldNumber = 1;
    private global::IUX.OTSAssureConfig assureConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSAssureConfig AssureConfig {
      get { return assureConfig_; }
      set {
        assureConfig_ = value;
      }
    }

    /// <summary>Field number for the "apollyon_config" field.</summary>
    public const int ApollyonConfigFieldNumber = 2;
    private global::IUX.OTSApollyonConfig apollyonConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSApollyonConfig ApollyonConfig {
      get { return apollyonConfig_; }
      set {
        apollyonConfig_ = value;
      }
    }

    /// <summary>Field number for the "das_config" field.</summary>
    public const int DasConfigFieldNumber = 3;
    private global::IUX.OTSDASConfig dasConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSDASConfig DasConfig {
      get { return dasConfig_; }
      set {
        dasConfig_ = value;
      }
    }

    /// <summary>Field number for the "echodyne_config" field.</summary>
    public const int EchodyneConfigFieldNumber = 4;
    private global::IUX.OTSEchodyneConfig echodyneConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSEchodyneConfig EchodyneConfig {
      get { return echodyneConfig_; }
      set {
        echodyneConfig_ = value;
      }
    }

    /// <summary>Field number for the "phantom_config" field.</summary>
    public const int PhantomConfigFieldNumber = 5;
    private global::IUX.OTSPhantomConfig phantomConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSPhantomConfig PhantomConfig {
      get { return phantomConfig_; }
      set {
        phantomConfig_ = value;
      }
    }

    /// <summary>Field number for the "bss_config" field.</summary>
    public const int BssConfigFieldNumber = 6;
    private global::IUX.OTSBSSConfig bssConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSBSSConfig BssConfig {
      get { return bssConfig_; }
      set {
        bssConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AssureConfig, other.AssureConfig)) return false;
      if (!object.Equals(ApollyonConfig, other.ApollyonConfig)) return false;
      if (!object.Equals(DasConfig, other.DasConfig)) return false;
      if (!object.Equals(EchodyneConfig, other.EchodyneConfig)) return false;
      if (!object.Equals(PhantomConfig, other.PhantomConfig)) return false;
      if (!object.Equals(BssConfig, other.BssConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (assureConfig_ != null) hash ^= AssureConfig.GetHashCode();
      if (apollyonConfig_ != null) hash ^= ApollyonConfig.GetHashCode();
      if (dasConfig_ != null) hash ^= DasConfig.GetHashCode();
      if (echodyneConfig_ != null) hash ^= EchodyneConfig.GetHashCode();
      if (phantomConfig_ != null) hash ^= PhantomConfig.GetHashCode();
      if (bssConfig_ != null) hash ^= BssConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (assureConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AssureConfig);
      }
      if (apollyonConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApollyonConfig);
      }
      if (dasConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DasConfig);
      }
      if (echodyneConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EchodyneConfig);
      }
      if (phantomConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PhantomConfig);
      }
      if (bssConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(BssConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (assureConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AssureConfig);
      }
      if (apollyonConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApollyonConfig);
      }
      if (dasConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DasConfig);
      }
      if (echodyneConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EchodyneConfig);
      }
      if (phantomConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PhantomConfig);
      }
      if (bssConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(BssConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (assureConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssureConfig);
      }
      if (apollyonConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApollyonConfig);
      }
      if (dasConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DasConfig);
      }
      if (echodyneConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EchodyneConfig);
      }
      if (phantomConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhantomConfig);
      }
      if (bssConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BssConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSConfig other) {
      if (other == null) {
        return;
      }
      if (other.assureConfig_ != null) {
        if (assureConfig_ == null) {
          AssureConfig = new global::IUX.OTSAssureConfig();
        }
        AssureConfig.MergeFrom(other.AssureConfig);
      }
      if (other.apollyonConfig_ != null) {
        if (apollyonConfig_ == null) {
          ApollyonConfig = new global::IUX.OTSApollyonConfig();
        }
        ApollyonConfig.MergeFrom(other.ApollyonConfig);
      }
      if (other.dasConfig_ != null) {
        if (dasConfig_ == null) {
          DasConfig = new global::IUX.OTSDASConfig();
        }
        DasConfig.MergeFrom(other.DasConfig);
      }
      if (other.echodyneConfig_ != null) {
        if (echodyneConfig_ == null) {
          EchodyneConfig = new global::IUX.OTSEchodyneConfig();
        }
        EchodyneConfig.MergeFrom(other.EchodyneConfig);
      }
      if (other.phantomConfig_ != null) {
        if (phantomConfig_ == null) {
          PhantomConfig = new global::IUX.OTSPhantomConfig();
        }
        PhantomConfig.MergeFrom(other.PhantomConfig);
      }
      if (other.bssConfig_ != null) {
        if (bssConfig_ == null) {
          BssConfig = new global::IUX.OTSBSSConfig();
        }
        BssConfig.MergeFrom(other.BssConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (assureConfig_ == null) {
              AssureConfig = new global::IUX.OTSAssureConfig();
            }
            input.ReadMessage(AssureConfig);
            break;
          }
          case 18: {
            if (apollyonConfig_ == null) {
              ApollyonConfig = new global::IUX.OTSApollyonConfig();
            }
            input.ReadMessage(ApollyonConfig);
            break;
          }
          case 26: {
            if (dasConfig_ == null) {
              DasConfig = new global::IUX.OTSDASConfig();
            }
            input.ReadMessage(DasConfig);
            break;
          }
          case 34: {
            if (echodyneConfig_ == null) {
              EchodyneConfig = new global::IUX.OTSEchodyneConfig();
            }
            input.ReadMessage(EchodyneConfig);
            break;
          }
          case 42: {
            if (phantomConfig_ == null) {
              PhantomConfig = new global::IUX.OTSPhantomConfig();
            }
            input.ReadMessage(PhantomConfig);
            break;
          }
          case 50: {
            if (bssConfig_ == null) {
              BssConfig = new global::IUX.OTSBSSConfig();
            }
            input.ReadMessage(BssConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (assureConfig_ == null) {
              AssureConfig = new global::IUX.OTSAssureConfig();
            }
            input.ReadMessage(AssureConfig);
            break;
          }
          case 18: {
            if (apollyonConfig_ == null) {
              ApollyonConfig = new global::IUX.OTSApollyonConfig();
            }
            input.ReadMessage(ApollyonConfig);
            break;
          }
          case 26: {
            if (dasConfig_ == null) {
              DasConfig = new global::IUX.OTSDASConfig();
            }
            input.ReadMessage(DasConfig);
            break;
          }
          case 34: {
            if (echodyneConfig_ == null) {
              EchodyneConfig = new global::IUX.OTSEchodyneConfig();
            }
            input.ReadMessage(EchodyneConfig);
            break;
          }
          case 42: {
            if (phantomConfig_ == null) {
              PhantomConfig = new global::IUX.OTSPhantomConfig();
            }
            input.ReadMessage(PhantomConfig);
            break;
          }
          case 50: {
            if (bssConfig_ == null) {
              BssConfig = new global::IUX.OTSBSSConfig();
            }
            input.ReadMessage(BssConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSControl : pb::IMessage<OTSControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSControl> _parser = new pb::MessageParser<OTSControl>(() => new OTSControl());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSControl(OTSControl other) : this() {
      _hasBits0 = other._hasBits0;
      assure_ = other.assure_;
      apollyon_ = other.apollyon_;
      das_ = other.das_;
      echodyne_ = other.echodyne_;
      phantom_ = other.phantom_;
      bss_ = other.bss_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSControl Clone() {
      return new OTSControl(this);
    }

    /// <summary>Field number for the "assure" field.</summary>
    public const int AssureFieldNumber = 1;
    private global::IUX.OTSControlCode assure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSControlCode Assure {
      get { if ((_hasBits0 & 1) != 0) { return assure_; } else { return global::IUX.OTSControlCode.NoControl; } }
      set {
        _hasBits0 |= 1;
        assure_ = value;
      }
    }
    /// <summary>Gets whether the "assure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssure {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "assure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssure() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "apollyon" field.</summary>
    public const int ApollyonFieldNumber = 2;
    private global::IUX.OTSControlCode apollyon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSControlCode Apollyon {
      get { if ((_hasBits0 & 2) != 0) { return apollyon_; } else { return global::IUX.OTSControlCode.NoControl; } }
      set {
        _hasBits0 |= 2;
        apollyon_ = value;
      }
    }
    /// <summary>Gets whether the "apollyon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApollyon {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "apollyon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApollyon() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "das" field.</summary>
    public const int DasFieldNumber = 3;
    private global::IUX.OTSControlCode das_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSControlCode Das {
      get { if ((_hasBits0 & 4) != 0) { return das_; } else { return global::IUX.OTSControlCode.NoControl; } }
      set {
        _hasBits0 |= 4;
        das_ = value;
      }
    }
    /// <summary>Gets whether the "das" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDas {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "das" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDas() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "echodyne" field.</summary>
    public const int EchodyneFieldNumber = 4;
    private global::IUX.OTSControlCode echodyne_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSControlCode Echodyne {
      get { if ((_hasBits0 & 8) != 0) { return echodyne_; } else { return global::IUX.OTSControlCode.NoControl; } }
      set {
        _hasBits0 |= 8;
        echodyne_ = value;
      }
    }
    /// <summary>Gets whether the "echodyne" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEchodyne {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "echodyne" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEchodyne() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "phantom" field.</summary>
    public const int PhantomFieldNumber = 5;
    private global::IUX.OTSControlCode phantom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSControlCode Phantom {
      get { if ((_hasBits0 & 16) != 0) { return phantom_; } else { return global::IUX.OTSControlCode.NoControl; } }
      set {
        _hasBits0 |= 16;
        phantom_ = value;
      }
    }
    /// <summary>Gets whether the "phantom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhantom {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "phantom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhantom() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "bss" field.</summary>
    public const int BssFieldNumber = 6;
    private global::IUX.OTSControlCode bss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.OTSControlCode Bss {
      get { if ((_hasBits0 & 32) != 0) { return bss_; } else { return global::IUX.OTSControlCode.NoControl; } }
      set {
        _hasBits0 |= 32;
        bss_ = value;
      }
    }
    /// <summary>Gets whether the "bss" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBss {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "bss" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBss() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Assure != other.Assure) return false;
      if (Apollyon != other.Apollyon) return false;
      if (Das != other.Das) return false;
      if (Echodyne != other.Echodyne) return false;
      if (Phantom != other.Phantom) return false;
      if (Bss != other.Bss) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAssure) hash ^= Assure.GetHashCode();
      if (HasApollyon) hash ^= Apollyon.GetHashCode();
      if (HasDas) hash ^= Das.GetHashCode();
      if (HasEchodyne) hash ^= Echodyne.GetHashCode();
      if (HasPhantom) hash ^= Phantom.GetHashCode();
      if (HasBss) hash ^= Bss.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAssure) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Assure);
      }
      if (HasApollyon) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Apollyon);
      }
      if (HasDas) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Das);
      }
      if (HasEchodyne) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Echodyne);
      }
      if (HasPhantom) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Phantom);
      }
      if (HasBss) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Bss);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAssure) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Assure);
      }
      if (HasApollyon) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Apollyon);
      }
      if (HasDas) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Das);
      }
      if (HasEchodyne) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Echodyne);
      }
      if (HasPhantom) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Phantom);
      }
      if (HasBss) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Bss);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAssure) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Assure);
      }
      if (HasApollyon) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Apollyon);
      }
      if (HasDas) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Das);
      }
      if (HasEchodyne) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Echodyne);
      }
      if (HasPhantom) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Phantom);
      }
      if (HasBss) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Bss);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSControl other) {
      if (other == null) {
        return;
      }
      if (other.HasAssure) {
        Assure = other.Assure;
      }
      if (other.HasApollyon) {
        Apollyon = other.Apollyon;
      }
      if (other.HasDas) {
        Das = other.Das;
      }
      if (other.HasEchodyne) {
        Echodyne = other.Echodyne;
      }
      if (other.HasPhantom) {
        Phantom = other.Phantom;
      }
      if (other.HasBss) {
        Bss = other.Bss;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Assure = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 16: {
            Apollyon = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 24: {
            Das = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 32: {
            Echodyne = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 40: {
            Phantom = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 48: {
            Bss = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Assure = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 16: {
            Apollyon = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 24: {
            Das = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 32: {
            Echodyne = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 40: {
            Phantom = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
          case 48: {
            Bss = (global::IUX.OTSControlCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSAssureConfig : pb::IMessage<OTSAssureConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSAssureConfig> _parser = new pb::MessageParser<OTSAssureConfig>(() => new OTSAssureConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSAssureConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSAssureConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSAssureConfig(OTSAssureConfig other) : this() {
      _hasBits0 = other._hasBits0;
      ip_ = other.ip_;
      port_ = other.port_;
      msgSent_ = other.msgSent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSAssureConfig Clone() {
      return new OTSAssureConfig(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private uint ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ip {
      get { return ip_; }
      set {
        ip_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "msg_sent" field.</summary>
    public const int MsgSentFieldNumber = 3;
    private uint msgSent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MsgSent {
      get { if ((_hasBits0 & 1) != 0) { return msgSent_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        msgSent_ = value;
      }
    }
    /// <summary>Gets whether the "msg_sent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMsgSent {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msg_sent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsgSent() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSAssureConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSAssureConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      if (MsgSent != other.MsgSent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (HasMsgSent) hash ^= MsgSent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ip != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (HasMsgSent) {
        output.WriteRawTag(24);
        output.WriteUInt32(MsgSent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ip != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (HasMsgSent) {
        output.WriteRawTag(24);
        output.WriteUInt32(MsgSent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ip != 0) {
        size += 1 + 4;
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (HasMsgSent) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MsgSent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSAssureConfig other) {
      if (other == null) {
        return;
      }
      if (other.Ip != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.HasMsgSent) {
        MsgSent = other.MsgSent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Ip = input.ReadFixed32();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 24: {
            MsgSent = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Ip = input.ReadFixed32();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 24: {
            MsgSent = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSApollyonConfig : pb::IMessage<OTSApollyonConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSApollyonConfig> _parser = new pb::MessageParser<OTSApollyonConfig>(() => new OTSApollyonConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSApollyonConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSApollyonConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSApollyonConfig(OTSApollyonConfig other) : this() {
      started_ = other.started_;
      filename_ = other.filename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSApollyonConfig Clone() {
      return new OTSApollyonConfig(this);
    }

    /// <summary>Field number for the "started" field.</summary>
    public const int StartedFieldNumber = 1;
    private bool started_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Started {
      get { return started_; }
      set {
        started_ = value;
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSApollyonConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSApollyonConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Started != other.Started) return false;
      if (Filename != other.Filename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Started != false) hash ^= Started.GetHashCode();
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Started != false) {
        output.WriteRawTag(8);
        output.WriteBool(Started);
      }
      if (Filename.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Started != false) {
        output.WriteRawTag(8);
        output.WriteBool(Started);
      }
      if (Filename.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Started != false) {
        size += 1 + 1;
      }
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSApollyonConfig other) {
      if (other == null) {
        return;
      }
      if (other.Started != false) {
        Started = other.Started;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Started = input.ReadBool();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Started = input.ReadBool();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSDASConfig : pb::IMessage<OTSDASConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSDASConfig> _parser = new pb::MessageParser<OTSDASConfig>(() => new OTSDASConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSDASConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSDASConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSDASConfig(OTSDASConfig other) : this() {
      pattern_ = other.pattern_;
      referenceLocation_ = other.referenceLocation_ != null ? other.referenceLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSDASConfig Clone() {
      return new OTSDASConfig(this);
    }

    /// <summary>Field number for the "pattern" field.</summary>
    public const int PatternFieldNumber = 1;
    private uint pattern_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pattern {
      get { return pattern_; }
      set {
        pattern_ = value;
      }
    }

    /// <summary>Field number for the "reference_location" field.</summary>
    public const int ReferenceLocationFieldNumber = 2;
    private global::IUX.Location referenceLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.Location ReferenceLocation {
      get { return referenceLocation_; }
      set {
        referenceLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSDASConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSDASConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pattern != other.Pattern) return false;
      if (!object.Equals(ReferenceLocation, other.ReferenceLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pattern != 0) hash ^= Pattern.GetHashCode();
      if (referenceLocation_ != null) hash ^= ReferenceLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pattern != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Pattern);
      }
      if (referenceLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReferenceLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pattern != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Pattern);
      }
      if (referenceLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReferenceLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pattern != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pattern);
      }
      if (referenceLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSDASConfig other) {
      if (other == null) {
        return;
      }
      if (other.Pattern != 0) {
        Pattern = other.Pattern;
      }
      if (other.referenceLocation_ != null) {
        if (referenceLocation_ == null) {
          ReferenceLocation = new global::IUX.Location();
        }
        ReferenceLocation.MergeFrom(other.ReferenceLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pattern = input.ReadUInt32();
            break;
          }
          case 18: {
            if (referenceLocation_ == null) {
              ReferenceLocation = new global::IUX.Location();
            }
            input.ReadMessage(ReferenceLocation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Pattern = input.ReadUInt32();
            break;
          }
          case 18: {
            if (referenceLocation_ == null) {
              ReferenceLocation = new global::IUX.Location();
            }
            input.ReadMessage(ReferenceLocation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSEchodyneConfig : pb::IMessage<OTSEchodyneConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSEchodyneConfig> _parser = new pb::MessageParser<OTSEchodyneConfig>(() => new OTSEchodyneConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSEchodyneConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSEchodyneConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSEchodyneConfig(OTSEchodyneConfig other) : this() {
      antennaLocation_ = other.antennaLocation_ != null ? other.antennaLocation_.Clone() : null;
      antennaAttitude_ = other.antennaAttitude_ != null ? other.antennaAttitude_.Clone() : null;
      ip_ = other.ip_;
      commandPort_ = other.commandPort_;
      statusPort_ = other.statusPort_;
      trackPort_ = other.trackPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSEchodyneConfig Clone() {
      return new OTSEchodyneConfig(this);
    }

    /// <summary>Field number for the "antenna_location" field.</summary>
    public const int AntennaLocationFieldNumber = 1;
    private global::IUX.Location antennaLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.Location AntennaLocation {
      get { return antennaLocation_; }
      set {
        antennaLocation_ = value;
      }
    }

    /// <summary>Field number for the "antenna_attitude" field.</summary>
    public const int AntennaAttitudeFieldNumber = 2;
    private global::IUX.Attitude antennaAttitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IUX.Attitude AntennaAttitude {
      get { return antennaAttitude_; }
      set {
        antennaAttitude_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 3;
    private uint ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ip {
      get { return ip_; }
      set {
        ip_ = value;
      }
    }

    /// <summary>Field number for the "command_port" field.</summary>
    public const int CommandPortFieldNumber = 4;
    private uint commandPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CommandPort {
      get { return commandPort_; }
      set {
        commandPort_ = value;
      }
    }

    /// <summary>Field number for the "status_port" field.</summary>
    public const int StatusPortFieldNumber = 5;
    private uint statusPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusPort {
      get { return statusPort_; }
      set {
        statusPort_ = value;
      }
    }

    /// <summary>Field number for the "track_port" field.</summary>
    public const int TrackPortFieldNumber = 6;
    private uint trackPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TrackPort {
      get { return trackPort_; }
      set {
        trackPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSEchodyneConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSEchodyneConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AntennaLocation, other.AntennaLocation)) return false;
      if (!object.Equals(AntennaAttitude, other.AntennaAttitude)) return false;
      if (Ip != other.Ip) return false;
      if (CommandPort != other.CommandPort) return false;
      if (StatusPort != other.StatusPort) return false;
      if (TrackPort != other.TrackPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (antennaLocation_ != null) hash ^= AntennaLocation.GetHashCode();
      if (antennaAttitude_ != null) hash ^= AntennaAttitude.GetHashCode();
      if (Ip != 0) hash ^= Ip.GetHashCode();
      if (CommandPort != 0) hash ^= CommandPort.GetHashCode();
      if (StatusPort != 0) hash ^= StatusPort.GetHashCode();
      if (TrackPort != 0) hash ^= TrackPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (antennaLocation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AntennaLocation);
      }
      if (antennaAttitude_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AntennaAttitude);
      }
      if (Ip != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Ip);
      }
      if (CommandPort != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CommandPort);
      }
      if (StatusPort != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StatusPort);
      }
      if (TrackPort != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TrackPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (antennaLocation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AntennaLocation);
      }
      if (antennaAttitude_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AntennaAttitude);
      }
      if (Ip != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Ip);
      }
      if (CommandPort != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CommandPort);
      }
      if (StatusPort != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StatusPort);
      }
      if (TrackPort != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TrackPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (antennaLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AntennaLocation);
      }
      if (antennaAttitude_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AntennaAttitude);
      }
      if (Ip != 0) {
        size += 1 + 4;
      }
      if (CommandPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CommandPort);
      }
      if (StatusPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusPort);
      }
      if (TrackPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrackPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSEchodyneConfig other) {
      if (other == null) {
        return;
      }
      if (other.antennaLocation_ != null) {
        if (antennaLocation_ == null) {
          AntennaLocation = new global::IUX.Location();
        }
        AntennaLocation.MergeFrom(other.AntennaLocation);
      }
      if (other.antennaAttitude_ != null) {
        if (antennaAttitude_ == null) {
          AntennaAttitude = new global::IUX.Attitude();
        }
        AntennaAttitude.MergeFrom(other.AntennaAttitude);
      }
      if (other.Ip != 0) {
        Ip = other.Ip;
      }
      if (other.CommandPort != 0) {
        CommandPort = other.CommandPort;
      }
      if (other.StatusPort != 0) {
        StatusPort = other.StatusPort;
      }
      if (other.TrackPort != 0) {
        TrackPort = other.TrackPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (antennaLocation_ == null) {
              AntennaLocation = new global::IUX.Location();
            }
            input.ReadMessage(AntennaLocation);
            break;
          }
          case 18: {
            if (antennaAttitude_ == null) {
              AntennaAttitude = new global::IUX.Attitude();
            }
            input.ReadMessage(AntennaAttitude);
            break;
          }
          case 29: {
            Ip = input.ReadFixed32();
            break;
          }
          case 32: {
            CommandPort = input.ReadUInt32();
            break;
          }
          case 40: {
            StatusPort = input.ReadUInt32();
            break;
          }
          case 48: {
            TrackPort = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (antennaLocation_ == null) {
              AntennaLocation = new global::IUX.Location();
            }
            input.ReadMessage(AntennaLocation);
            break;
          }
          case 18: {
            if (antennaAttitude_ == null) {
              AntennaAttitude = new global::IUX.Attitude();
            }
            input.ReadMessage(AntennaAttitude);
            break;
          }
          case 29: {
            Ip = input.ReadFixed32();
            break;
          }
          case 32: {
            CommandPort = input.ReadUInt32();
            break;
          }
          case 40: {
            StatusPort = input.ReadUInt32();
            break;
          }
          case 48: {
            TrackPort = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSPhantomConfig : pb::IMessage<OTSPhantomConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSPhantomConfig> _parser = new pb::MessageParser<OTSPhantomConfig>(() => new OTSPhantomConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSPhantomConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSPhantomConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSPhantomConfig(OTSPhantomConfig other) : this() {
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSPhantomConfig Clone() {
      return new OTSPhantomConfig(this);
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 1;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSPhantomConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSPhantomConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Port != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Port != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSPhantomConfig other) {
      if (other == null) {
        return;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OTSBSSConfig : pb::IMessage<OTSBSSConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OTSBSSConfig> _parser = new pb::MessageParser<OTSBSSConfig>(() => new OTSBSSConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTSBSSConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IUX.IUXOTSReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSBSSConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSBSSConfig(OTSBSSConfig other) : this() {
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTSBSSConfig Clone() {
      return new OTSBSSConfig(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private uint ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ip {
      get { return ip_; }
      set {
        ip_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTSBSSConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTSBSSConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ip != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ip != 0) {
        output.WriteRawTag(13);
        output.WriteFixed32(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ip != 0) {
        size += 1 + 4;
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTSBSSConfig other) {
      if (other == null) {
        return;
      }
      if (other.Ip != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Ip = input.ReadFixed32();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Ip = input.ReadFixed32();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
